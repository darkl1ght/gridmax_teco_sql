USE [HIS_USER]
GO
	/****** Object:  UserDefinedFunction [GADS].[POLK_MONTHLY_GEN_FN]    Script Date: 3/17/2025 8:07:53 AM ******/
SET
	ANSI_NULLS ON
GO
SET
	QUOTED_IDENTIFIER ON
GO
	CREATE FUNCTION [GADS].[POLK_MONTHLY_GEN_FN] (@SearchUID VARCHAR(256), @StartDate DATETIME, @EndDate DATETIME) RETURNS @RESULTS TABLE(
		DATEPART INT,
		STATION VARCHAR(256),
		PLANT VARCHAR(256),
		UNIT VARCHAR(256),
		UNIT_GROSS FLOAT,
		UNIT_NET FLOAT
	) AS BEGIN -- 2025-02-01 01:00:00.000
	WITH PLANT_METER_READINGS as (
		SELECT
			*
		FROM
			[GADS].[PLANT_METER_READINGS_FN](@SearchUID, @StartDate, @EndDate)
	),
	POLK_GROUP1 AS (
		SELECT
			'CT#1' AS UNIT
		UNION
		SELECT
			'ST#1'
	),
	POLK_CIRCUIT_SS AS (
		SELECT
			'14050' AS UNIT
		UNION
		SELECT
			'14051'
	),
	POLK_ST2_SS AS (
		SELECT
			'2A' AS UNIT
		UNION
		SELECT
			'2B'
	),
	POLK_CT_SS AS (
		SELECT
			'CT#2' AS UNIT
		UNION
		SELECT
			'CT#3'
		UNION
		SELECT
			'CT#4'
		UNION
		SELECT
			'CT#5'
	),
	POLK_CT_SS_SUM AS (
		SELECT
			DATEPART,
			UNIT,
			SUM(Value) AS POLK_CT_SS_SUM
		FROM
			PLANT_METER_READINGS
		WHERE
			ValueType = 's'
			AND UNIT IN (
				SELECT
					UNIT
				FROM
					POLK_CT_SS
			)
		GROUP BY
			DATEPART,
			UNIT
	) -- select * from POLK_CT_SS_SUM;
,
	UNIT_GROSS AS (
		SELECT
			DATEPART,
			STATION,
			PLANT,
			UNIT,
			SUM(Value) AS UNIT_GROSS,
			IIF(
				UNIT IN (
					SELECT
						UNIT
					FROM
						POLK_GROUP1
				),
				1,
				0
			) AS POLK_GROUP1
		FROM
			PLANT_METER_READINGS
		WHERE
			ValueType = 'g'
		GROUP BY
			DATEPART,
			STATION,
			PLANT,
			UNIT
	) -- select * from UNIT_GROSS;
,
	POLK_GROUP1_GROSS AS (
		SELECT
			DATEPART,
			SUM(UNIT_GROSS) AS POLK_GROUP1_GROSS
		FROM
			UNIT_GROSS
		WHERE
			POLK_GROUP1 = 1
		GROUP BY
			DATEPART
	) -- select * from  POLK_GROUP1_GROSS;
,
	CIRCUIT_SS_SUM AS (
		SELECT
			DATEPART,
			SUM(Value) AS CIRCUIT_SS_SUM
		FROM
			PLANT_METER_READINGS
		WHERE
			ValueType = 's'
			AND UNIT IN (
				SELECT
					UNIT
				FROM
					POLK_CIRCUIT_SS
			)
		GROUP BY
			DATEPART
	) -- select * from CIRCUIT_SS_SUM;
,
	UNIT_CIRCUIT_SS AS (
		SELECT
			a.DATEPART,
			a.STATION,
			a.PLANT,
			a.UNIT,
			a.UNIT_GROSS,
			b.CIRCUIT_SS_SUM
		FROM
			UNIT_GROSS a
			LEFT JOIN CIRCUIT_SS_SUM b on a.DATEPART = b.DATEPART
			AND A.POLK_GROUP1 = 1
	) -- select * from UNIT_CIRCUIT_SS order by datepart;
,
	GROUP1_SS AS (
		SELECT
			DATEPART,
			(
				CASE
					UNIT
					WHEN '1A' THEN 'CT#1'
					ELSE 'ST#1'
				END
			) AS UNIT,
			SUM(VALUE) AS GROUP1_SS
		FROM
			PLANT_METER_READINGS
		WHERE
			VALUETYPE = 's'
			AND UNIT IN ('1A', '1B')
		GROUP BY
			DATEPART,
			UNIT
	) -- select * from GROUP1_SS order by datepart;
,
	GROUP1_ADD_IN AS (
		SELECT
			DATEPART,
			(
				CASE
					UNIT
					WHEN 'CT#2' THEN 'CT#1'
					WHEN 'CT#3' THEN 'ST#1'
				END
			) AS UNIT,
			SUM(VALUE) AS GROUP1_ADD_IN
		FROM
			PLANT_METER_READINGS
		WHERE
			VALUETYPE = 's'
			AND UNIT IN ('CT#2', 'CT#3')
		GROUP BY
			DATEPART,
			UNIT
	) -- select * from GROUP1_ADD_IN order by datepart, unit;
,
	POLK_ST2_SS_SUM AS (
		SELECT
			DATEPART,
			'ST#2' as UNIT,
			SUM(Value) AS POLK_ST2_SS_SUM
		FROM
			PLANT_METER_READINGS
		WHERE
			ValueType = 's'
			AND UNIT IN (
				SELECT
					UNIT
				FROM
					POLK_ST2_SS
			)
		GROUP BY
			DATEPART
	) -- select * from POLK_ST2_SS_SUM order by datepart, unit;
,
	PRE_FINAL_OUTPUT AS (
		SELECT
			a.DATEPART,
			a.STATION,
			a.PLANT,
			a.UNIT,
			a.UNIT_GROSS,
			a.CIRCUIT_SS_SUM,
			b.GROUP1_SS,
			c.POLK_GROUP1_GROSS,
			d.POLK_ST2_SS_SUM,
			e.GROUP1_ADD_IN,
			CASE
				POLK_GROUP1_GROSS
				WHEN 0 THEN (0.5 * a.CIRCUIT_SS_SUM)
				ELSE (
					a.CIRCUIT_SS_SUM * a.UNIT_GROSS / c.POLK_GROUP1_GROSS
				)
			END AS UNIT_CIRCUIT_SS,
			f.POLK_CT_SS_SUM
		FROM
			UNIT_CIRCUIT_SS a
			LEFT JOIN GROUP1_SS b on a.DATEPART = b.DATEPART
			AND a.UNIT = b.UNIT
			LEFT JOIN POLK_GROUP1_GROSS c on a.DATEPART = c.DATEPART
			AND GROUP1_SS IS NOT NULL
			LEFT JOIN POLK_ST2_SS_SUM d on a.DATEPART = d.DATEPART
			AND a.UNIT = d.UNIT
			LEFT JOIN GROUP1_ADD_IN e on a.DATEPART = e.DATEPART
			AND a.UNIT = e.UNIT
			LEFT JOIN POLK_CT_SS_SUM f on a.DATEPART = f.DATEPART
			AND a.UNIT = f.UNIT
	)
INSERT INTO
	@RESULTS (
		DATEPART,
		STATION,
		PLANT,
		UNIT,
		UNIT_GROSS,
		UNIT_NET
	)
SELECT
	DATEPART,
	STATION,
	PLANT,
	UNIT,
	UNIT_GROSS,
	ROUND(
		(
			UNIT_GROSS - IIF(UNIT_CIRCUIT_SS IS NULL, 0, UNIT_CIRCUIT_SS) - IIF(GROUP1_SS IS NULL, 0, GROUP1_SS) + IIF(GROUP1_ADD_IN IS NULL, 0, GROUP1_ADD_IN) - IIF(POLK_CT_SS_SUM IS NULL, 0, POLK_CT_SS_SUM) - IIF(POLK_ST2_SS_SUM IS NULL, 0, POLK_ST2_SS_SUM)
		),
		3
	) AS UNIT_NET
FROM
	PRE_FINAL_OUTPUT
ORDER BY
	DATEPART,
	UNIT;

RETURN;

END;

GO