USE [HIS_USER]
GO
  /****** Object:  UserDefinedFunction [GADS].[BIGBEND_MONTHLY_GEN_FN]    Script Date: 3/27/2025 8:38:41 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO CREATE
  OR ALTER FUNCTION [GADS].[BIGBEND_MONTHLY_GEN_FN] (
    @SearchUID VARCHAR(256),
    @StartDate DATETIME,
    @EndDate DATETIME
  ) RETURNS @RESULTS TABLE(
    DATEPART INT,
    STATION VARCHAR(256),
    PLANT VARCHAR(256),
    UNIT VARCHAR(256),
    UNIT_GROSS FLOAT,
    UNIT_NET FLOAT
  ) AS BEGIN -- 2025-02-01 01:00:00.000
  WITH PLANT_METER_READINGS as (
    SELECT *
    FROM [GADS].[PLANT_METER_READINGS_FN](@SearchUID, @StartDate, @EndDate)
  ) --SELECT * FROM PLANT_METER_READINGS;
,
  UNIT_GROSS AS (
    SELECT DATEPART,
      STATION,
      PLANT,
      UNIT,
      SUM(VALUE) AS UNIT_GROSS
    FROM PLANT_METER_READINGS -- UN#1, UN#2, UN#3 has been excluded as they are not included in gross generation calculation
    WHERE VALUETYPE = 'g'
    GROUP BY DATEPART,
      STATION,
      PLANT,
      UNIT,
      VALUETYPE
  ) --SELECT * FROM UNIT_GROSS;
,
  BIGBEND_GROSS AS (
    SELECT DATEPART,
      SUM(UNIT_GROSS) AS BIGBEND_GROSS
    FROM UNIT_GROSS
    GROUP BY DATEPART
  ) --SELECT * FROM BIGBEND_GROSS;
,
  STATION_SERVICE AS (
    SELECT DATEPART,
      SUBSTRING(UNIT, 1, 4) as UNIT,
      SUM(VALUE) AS STATION_SERVICE
    FROM PLANT_METER_READINGS
    WHERE VALUETYPE = 's'
    GROUP BY DATEPART,
      SUBSTRING(UNIT, 1, 4),
      VALUETYPE
  ) --SELECT * FROM STATION_SERVICE_GROSS;
,
  RESERVE_GROSS AS (
    SELECT DATEPART,
      SUM(VALUE) AS RESERVE_GROSS
    FROM PLANT_METER_READINGS
    WHERE VALUETYPE = 'r'
    GROUP BY DATEPART,
      VALUETYPE
  ) --SELECT * FROM RESERVE_GROSS;
,
  PRE_FINAL_OUTPUT AS (
    SELECT A.DATEPART,
      A.STATION,
      A.PLANT,
      A.UNIT,
      A.UNIT_GROSS,
      B.STATION_SERVICE,
      C.BIGBEND_GROSS,
      D.RESERVE_GROSS,
      CASE
        WHEN BIGBEND_GROSS = 0
        AND A.UNIT <> 'UN#4' THEN 0
        ELSE D.RESERVE_GROSS *(A.UNIT_GROSS / C.BIGBEND_GROSS)
      END AS UNIT_RESERVE
    FROM UNIT_GROSS A
      LEFT JOIN STATION_SERVICE B ON A.DATEPART = B.DATEPART
      AND A.UNIT = B.UNIT
      LEFT JOIN BIGBEND_GROSS C ON A.DATEPART = C.DATEPART
      LEFT JOIN RESERVE_GROSS D ON A.DATEPART = D.DATEPART
  ) --SELECT * from PRE_FINAL_OUTPUT;
  --SELECT DATEPART, STATION, PLANT, 
  --UNIT, UNIT_GROSS, (UNIT_GROSS-STATION_SERVICE-UNIT_RESERVE) AS UNIT_NET 
  --FROM PRE_FINAL_OUTPUT;
INSERT INTO @RESULTS (
    DATEPART,
    STATION,
    PLANT,
    UNIT,
    UNIT_GROSS,
    UNIT_NET
  )
SELECT DATEPART,
  STATION,
  PLANT,
  UNIT,
  UNIT_GROSS,
  ROUND(UNIT_GROSS - STATION_SERVICE - UNIT_RESERVE, 3) AS UNIT_NET
FROM PRE_FINAL_OUTPUT;
RETURN;
END;
GO